name: terraform-plan-apply

on:
  pull_request:
    paths: ["terraform/**"]
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        required: true
        default: dev
        type: choice
        options: [dev, prod]

jobs:
  tf:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Debug secrets scope
        run: |
          echo "Client ID: ${{ secrets.AZURE_CLIENT_ID }}"
          echo "Tenant ID: ${{ secrets.AZURE_TENANT_ID }}"
          echo "Sub ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Export Azure backend auth env
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: Pick tfvars
        id: pick
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TFVARS=envs/${{ github.event.inputs.env }}.tfvars" >> $GITHUB_OUTPUT
          else
            echo "TFVARS=envs/dev.tfvars" >> $GITHUB_OUTPUT
          fi

      - name: Export Databricks env (PAT for now)
        run: |
          echo "TF_VAR_databricks_workspace_url=${DATABRICKS_HOST}" >> $GITHUB_ENV
          echo "TF_VAR_databricks_token=${DATABRICKS_TOKEN}" >> $GITHUB_ENV

      - name: Prevent TF variable prompts (temporary)
        run: |
          echo "TF_VAR_azure_client_id=" >> $GITHUB_ENV
          echo "TF_VAR_azure_tenant_id=" >> $GITHUB_ENV
          echo "TF_VAR_databricks_workspace_id=" >> $GITHUB_ENV
          echo "TF_VAR_databricks_workspace_url=" >> $GITHUB_ENV

      - name: Reset Terraform working dir
        working-directory: terraform
        run: rm -rf .terraform

      - name: Terraform init
        working-directory: terraform
        run: terraform init

      - name: Terraform plan (PRs only)
        if: github.event_name == 'pull_request'
        working-directory: terraform
        run: terraform plan -var-file=${{ steps.pick.outputs.TFVARS }}

      - name: Terraform apply (manual only)
        if: github.event_name == 'workflow_dispatch'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=${{ steps.pick.outputs.TFVARS }}
