#
# Copyright (2023) The Delta Lake Project Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: delta/connect/commands.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from delta.connect.proto import base_pb2 as delta_dot_connect_dot_base__pb2
from pyspark.sql.connect.proto import types_pb2 as spark_dot_connect_dot_types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1c\x64\x65lta/connect/commands.proto\x12\rdelta.connect\x1a\x18\x64\x65lta/connect/base.proto\x1a\x19spark/connect/types.proto"\x82\x03\n\x0c\x44\x65ltaCommand\x12<\n\x0b\x63lone_table\x18\x01 \x01(\x0b\x32\x19.delta.connect.CloneTableH\x00R\ncloneTable\x12?\n\x0cvacuum_table\x18\x02 \x01(\x0b\x32\x1a.delta.connect.VacuumTableH\x00R\x0bvacuumTable\x12[\n\x16upgrade_table_protocol\x18\x03 \x01(\x0b\x32#.delta.connect.UpgradeTableProtocolH\x00R\x14upgradeTableProtocol\x12\x35\n\x08generate\x18\x04 \x01(\x0b\x32\x17.delta.connect.GenerateH\x00R\x08generate\x12O\n\x12\x63reate_delta_table\x18\x05 \x01(\x0b\x32\x1f.delta.connect.CreateDeltaTableH\x00R\x10\x63reateDeltaTableB\x0e\n\x0c\x63ommand_type"\xec\x02\n\nCloneTable\x12/\n\x05table\x18\x01 \x01(\x0b\x32\x19.delta.connect.DeltaTableR\x05table\x12\x16\n\x06target\x18\x02 \x01(\tR\x06target\x12\x1a\n\x07version\x18\x03 \x01(\x05H\x00R\x07version\x12\x1e\n\ttimestamp\x18\x04 \x01(\tH\x00R\ttimestamp\x12\x1d\n\nis_shallow\x18\x05 \x01(\x08R\tisShallow\x12\x18\n\x07replace\x18\x06 \x01(\x08R\x07replace\x12I\n\nproperties\x18\x07 \x03(\x0b\x32).delta.connect.CloneTable.PropertiesEntryR\nproperties\x1a=\n\x0fPropertiesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\x16\n\x14version_or_timestamp"\x80\x01\n\x0bVacuumTable\x12/\n\x05table\x18\x01 \x01(\x0b\x32\x19.delta.connect.DeltaTableR\x05table\x12,\n\x0fretention_hours\x18\x02 \x01(\x01H\x00R\x0eretentionHours\x88\x01\x01\x42\x12\n\x10_retention_hours"\x95\x01\n\x14UpgradeTableProtocol\x12/\n\x05table\x18\x01 \x01(\x0b\x32\x19.delta.connect.DeltaTableR\x05table\x12%\n\x0ereader_version\x18\x02 \x01(\x05R\rreaderVersion\x12%\n\x0ewriter_version\x18\x03 \x01(\x05R\rwriterVersion"O\n\x08Generate\x12/\n\x05table\x18\x01 \x01(\x0b\x32\x19.delta.connect.DeltaTableR\x05table\x12\x12\n\x04mode\x18\x02 \x01(\tR\x04mode"\xc2\x06\n\x10\x43reateDeltaTable\x12\x38\n\x04mode\x18\x01 \x01(\x0e\x32$.delta.connect.CreateDeltaTable.ModeR\x04mode\x12"\n\ntable_name\x18\x02 \x01(\tH\x00R\ttableName\x88\x01\x01\x12\x1f\n\x08location\x18\x03 \x01(\tH\x01R\x08location\x88\x01\x01\x12\x1d\n\x07\x63omment\x18\x04 \x01(\tH\x02R\x07\x63omment\x88\x01\x01\x12@\n\x07\x63olumns\x18\x05 \x03(\x0b\x32&.delta.connect.CreateDeltaTable.ColumnR\x07\x63olumns\x12\x31\n\x14partitioning_columns\x18\x06 \x03(\tR\x13partitioningColumns\x12O\n\nproperties\x18\x07 \x03(\x0b\x32/.delta.connect.CreateDeltaTable.PropertiesEntryR\nproperties\x1a\xe6\x01\n\x06\x43olumn\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x34\n\tdata_type\x18\x02 \x01(\x0b\x32\x17.spark.connect.DataTypeR\x08\x64\x61taType\x12\x1a\n\x08nullable\x18\x03 \x01(\x08R\x08nullable\x12\x33\n\x13generated_always_as\x18\x04 \x01(\tH\x00R\x11generatedAlwaysAs\x88\x01\x01\x12\x1d\n\x07\x63omment\x18\x05 \x01(\tH\x01R\x07\x63omment\x88\x01\x01\x42\x16\n\x14_generated_always_asB\n\n\x08_comment\x1a=\n\x0fPropertiesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01"z\n\x04Mode\x12\x14\n\x10MODE_UNSPECIFIED\x10\x00\x12\x0f\n\x0bMODE_CREATE\x10\x01\x12\x1d\n\x19MODE_CREATE_IF_NOT_EXISTS\x10\x02\x12\x10\n\x0cMODE_REPLACE\x10\x03\x12\x1a\n\x16MODE_CREATE_OR_REPLACE\x10\x04\x42\r\n\x0b_table_nameB\x0b\n\t_locationB\n\n\x08_commentB\x1a\n\x16io.delta.connect.protoP\x01\x62\x06proto3'
)


_DELTACOMMAND = DESCRIPTOR.message_types_by_name["DeltaCommand"]
_CLONETABLE = DESCRIPTOR.message_types_by_name["CloneTable"]
_CLONETABLE_PROPERTIESENTRY = _CLONETABLE.nested_types_by_name["PropertiesEntry"]
_VACUUMTABLE = DESCRIPTOR.message_types_by_name["VacuumTable"]
_UPGRADETABLEPROTOCOL = DESCRIPTOR.message_types_by_name["UpgradeTableProtocol"]
_GENERATE = DESCRIPTOR.message_types_by_name["Generate"]
_CREATEDELTATABLE = DESCRIPTOR.message_types_by_name["CreateDeltaTable"]
_CREATEDELTATABLE_COLUMN = _CREATEDELTATABLE.nested_types_by_name["Column"]
_CREATEDELTATABLE_PROPERTIESENTRY = _CREATEDELTATABLE.nested_types_by_name["PropertiesEntry"]
_CREATEDELTATABLE_MODE = _CREATEDELTATABLE.enum_types_by_name["Mode"]
DeltaCommand = _reflection.GeneratedProtocolMessageType(
    "DeltaCommand",
    (_message.Message,),
    {
        "DESCRIPTOR": _DELTACOMMAND,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.DeltaCommand)
    },
)
_sym_db.RegisterMessage(DeltaCommand)

CloneTable = _reflection.GeneratedProtocolMessageType(
    "CloneTable",
    (_message.Message,),
    {
        "PropertiesEntry": _reflection.GeneratedProtocolMessageType(
            "PropertiesEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _CLONETABLE_PROPERTIESENTRY,
                "__module__": "delta.connect.commands_pb2"
                # @@protoc_insertion_point(class_scope:delta.connect.CloneTable.PropertiesEntry)
            },
        ),
        "DESCRIPTOR": _CLONETABLE,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.CloneTable)
    },
)
_sym_db.RegisterMessage(CloneTable)
_sym_db.RegisterMessage(CloneTable.PropertiesEntry)

VacuumTable = _reflection.GeneratedProtocolMessageType(
    "VacuumTable",
    (_message.Message,),
    {
        "DESCRIPTOR": _VACUUMTABLE,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.VacuumTable)
    },
)
_sym_db.RegisterMessage(VacuumTable)

UpgradeTableProtocol = _reflection.GeneratedProtocolMessageType(
    "UpgradeTableProtocol",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPGRADETABLEPROTOCOL,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.UpgradeTableProtocol)
    },
)
_sym_db.RegisterMessage(UpgradeTableProtocol)

Generate = _reflection.GeneratedProtocolMessageType(
    "Generate",
    (_message.Message,),
    {
        "DESCRIPTOR": _GENERATE,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.Generate)
    },
)
_sym_db.RegisterMessage(Generate)

CreateDeltaTable = _reflection.GeneratedProtocolMessageType(
    "CreateDeltaTable",
    (_message.Message,),
    {
        "Column": _reflection.GeneratedProtocolMessageType(
            "Column",
            (_message.Message,),
            {
                "DESCRIPTOR": _CREATEDELTATABLE_COLUMN,
                "__module__": "delta.connect.commands_pb2"
                # @@protoc_insertion_point(class_scope:delta.connect.CreateDeltaTable.Column)
            },
        ),
        "PropertiesEntry": _reflection.GeneratedProtocolMessageType(
            "PropertiesEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _CREATEDELTATABLE_PROPERTIESENTRY,
                "__module__": "delta.connect.commands_pb2"
                # @@protoc_insertion_point(class_scope:delta.connect.CreateDeltaTable.PropertiesEntry)
            },
        ),
        "DESCRIPTOR": _CREATEDELTATABLE,
        "__module__": "delta.connect.commands_pb2"
        # @@protoc_insertion_point(class_scope:delta.connect.CreateDeltaTable)
    },
)
_sym_db.RegisterMessage(CreateDeltaTable)
_sym_db.RegisterMessage(CreateDeltaTable.Column)
_sym_db.RegisterMessage(CreateDeltaTable.PropertiesEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n\026io.delta.connect.protoP\001"
    _CLONETABLE_PROPERTIESENTRY._options = None
    _CLONETABLE_PROPERTIESENTRY._serialized_options = b"8\001"
    _CREATEDELTATABLE_PROPERTIESENTRY._options = None
    _CREATEDELTATABLE_PROPERTIESENTRY._serialized_options = b"8\001"
    _DELTACOMMAND._serialized_start = 101
    _DELTACOMMAND._serialized_end = 487
    _CLONETABLE._serialized_start = 490
    _CLONETABLE._serialized_end = 854
    _CLONETABLE_PROPERTIESENTRY._serialized_start = 769
    _CLONETABLE_PROPERTIESENTRY._serialized_end = 830
    _VACUUMTABLE._serialized_start = 857
    _VACUUMTABLE._serialized_end = 985
    _UPGRADETABLEPROTOCOL._serialized_start = 988
    _UPGRADETABLEPROTOCOL._serialized_end = 1137
    _GENERATE._serialized_start = 1139
    _GENERATE._serialized_end = 1218
    _CREATEDELTATABLE._serialized_start = 1221
    _CREATEDELTATABLE._serialized_end = 2055
    _CREATEDELTATABLE_COLUMN._serialized_start = 1598
    _CREATEDELTATABLE_COLUMN._serialized_end = 1828
    _CREATEDELTATABLE_PROPERTIESENTRY._serialized_start = 769
    _CREATEDELTATABLE_PROPERTIESENTRY._serialized_end = 830
    _CREATEDELTATABLE_MODE._serialized_start = 1893
    _CREATEDELTATABLE_MODE._serialized_end = 2015
# @@protoc_insertion_point(module_scope)
