#
# DATABRICKS CONFIDENTIAL & PROPRIETARY
# __________________
#
# Copyright 2023-present Databricks, Inc.
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains the property of Databricks, Inc.
# and its suppliers, if any.  The intellectual and technical concepts contained herein are
# proprietary to Databricks, Inc. and its suppliers and may be covered by U.S. and foreign Patents,
# patents in process, and are protected by trade secret and/or copyright law. Dissemination, use,
# or reproduction of this information is strictly forbidden unless prior written permission is
# obtained from Databricks, Inc.
#
# If you view or obtain a copy of this information and believe Databricks, Inc. may not have
# intended it to be made available, please promptly report it to Databricks Legal Department
# @ legal@databricks.com.
#
"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

DATABRICKS CONFIDENTIAL & PROPRIETARY
__________________

Copyright 2023-present Databricks, Inc.
All Rights Reserved.

NOTICE:  All information contained herein is, and remains the property of Databricks, Inc.
and its suppliers, if any.  The intellectual and technical concepts contained herein are
proprietary to Databricks, Inc. and its suppliers and may be covered by U.S. and foreign Patents,
patents in process, and are protected by trade secret and/or copyright law. Dissemination, use,
or reproduction of this information is strictly forbidden unless prior written permission is
obtained from Databricks, Inc.

If you view or obtain a copy of this information and believe Databricks, Inc. may not have
intended it to be made available, please promptly report it to Databricks Legal Department
@ legal@databricks.com.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Environment(google.protobuf.message.Message):
    """(Python) environment that UDFs should use for execution."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class CompressedVirtualEnv(google.protobuf.message.Message):
        """Compressed virtual environment with a path representing a blob in private DBFS. The blob can
        be downloaded via the data daemon.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        path: builtins.str
        def __init__(
            self,
            *,
            path: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["path", b"path"]) -> None: ...

    VIRTUAL_ENV_FIELD_NUMBER: builtins.int
    @property
    def virtual_env(self) -> global___Environment.CompressedVirtualEnv: ...
    def __init__(
        self,
        *,
        virtual_env: global___Environment.CompressedVirtualEnv | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["type", b"type", "virtual_env", b"virtual_env"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["type", b"type", "virtual_env", b"virtual_env"]
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["type", b"type"]
    ) -> typing_extensions.Literal["virtual_env"] | None: ...

global___Environment = Environment
